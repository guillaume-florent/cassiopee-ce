#version 400 compatibility

uniform int patch_size;

layout( isolines, equal_spacing ) in;

in TCS_OUT
{
    vec4 position;
    vec4 color;
} tcs_in[];


void interpolate_p2()
{
    vec3 p0 = gl_in[0].gl_Position.xyz;
    vec3 p1 = gl_in[1].gl_Position.xyz;
    vec3 p2 = gl_in[2].gl_Position.xyz;

    vec3 a0 = p0;
    vec3 a1 = 4 * p1 - 3 * p0 - p2;
    vec3 a2 = 2*(p0 - 2 * p1 + p2);

    float u = gl_TessCoord.x;

    // vertex en coordonnees modele...
    vec4 xyz = vec4(a0 + u*a1 + u*u*a2, 1);
    // gl_position en repere camera projetee
    gl_Position = gl_ModelViewProjectionMatrix * xyz;

}

void main()
{
    if (patch_size == 3) interpolate_p2();
    else interpolate_p2();
}
